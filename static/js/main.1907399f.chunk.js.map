{"version":3,"sources":["components/ScrollToTop.jsx","systems/multi/SystemMulti_5-17-68.js","components/MultiDescription.jsx","components/SystemDescription.jsx","components/NumbersInput.jsx","components/Bet.jsx","components/Bets.jsx","pages/SystemMulti_5-17-68.jsx","pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["ScrollToTop","prevProps","this","props","location","pathname","window","scrollTo","React","Component","withRouter","generateBets","toFixed","userNumbers","bets","i","push","numberToBetsRange","numberToBets","number","array","length","firstBet","lastBet","MultiDefinition","SystemDescription","NumbersInput","className","initialValues","myNumbers","onSubmit","values","setMyNumbers","setMyBets","name","style","width","type","Bet","betIndex","betNumbers","validateNumbers","numbers","errorMessage","parseInt","Number","Set","size","Bets","md","join","colSpan","myBets","map","bet","key","System","state","setState","sort","a","b","MultiDescription","About","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1907399f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.location.pathname !== prevProps.location.pathname\r\n    ) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n\r\n// solution from https://reacttraining.com/react-router/web/guides/scroll-restoration [ROUTER DOCS]\r\n","/* \r\n-------- System 5-17-68 --------\r\nSystem Multi Lotek [S-N-Z]\r\nS - ilość skreśleń w zakładzie\r\nN - zakres liczb systemu\r\nZ - ilość zakładów\r\n--------------------------------\r\n\r\nProgram pobiera od użytkownika 17 liczb i zwraca 68 zakładów Multi Lotka (po 5 liczb każdy).\r\n*/\r\n\r\n// === CONSTANT DATA VARIABLES ===\r\nexport const numbersPerBet = 5;\r\nexport const numbersAmount = 17;\r\nexport const betsAmount = 68;\r\nexport const betPrice = 2.5;\r\nconst maxNumber = 80;\r\nconst systemDescription = `\r\n  System Multi Lotek\r\n[S-N-Z-G] = 5-17-68-3/3\r\n\r\nS - ilość skreśleń w zakładzie\r\nN - zakres liczb systemu\r\nZ - ilość zakładów\r\nG - t/T - gwarancja wygranej odpowiadajacej trafieniu \"t\" liczb w jednym zakładzie przy trafieniu \"T\" liczb z całego zakresu\r\n\r\nkoszt zakładu: ${betPrice.toFixed(2)} zł\r\nliczb na zakład: ${numbersPerBet}\r\nzakres liczb: 1 - ${maxNumber}\r\n`;\r\n\r\n// === SYSTEM GENERATOR ===\r\nexport const generateBets = userNumbers => {\r\n  // initialization of 68 bets array\r\n  const bets = [];\r\n  for (let i=0; i<betsAmount; i++) {\r\n    bets.push([]);\r\n  };\r\n\r\n  // filling bets with user numbers (based on system diagram from newspaper)\r\n  numberToBetsRange(userNumbers[0], bets, 1, 20);\r\n  numberToBetsRange(userNumbers[1], bets, 1, 5);\r\n  numberToBetsRange(userNumbers[1], bets, 21, 35);\r\n  numberToBets(userNumbers[2], bets, [1]);\r\n  numberToBetsRange(userNumbers[2], bets, 6, 9);\r\n  numberToBetsRange(userNumbers[2], bets, 21, 24);\r\n  numberToBetsRange(userNumbers[2], bets, 36, 46);\r\n  numberToBets(userNumbers[3], bets, [1], bets);\r\n  numberToBetsRange(userNumbers[3], bets, 10, 13);\r\n  numberToBetsRange(userNumbers[3], bets, 25, 28);\r\n  numberToBetsRange(userNumbers[3], bets, 36, 39);\r\n  numberToBetsRange(userNumbers[3], bets, 47, 53);\r\n  numberToBets(userNumbers[4], bets, [1]);\r\n  numberToBetsRange(userNumbers[4], bets, 14, 17);\r\n  numberToBetsRange(userNumbers[4], bets, 29, 32);\r\n  numberToBetsRange(userNumbers[4], bets, 40, 43);\r\n  numberToBetsRange(userNumbers[4], bets, 47, 50);\r\n  numberToBetsRange(userNumbers[4], bets, 54, 56);\r\n  numberToBets(userNumbers[5], bets, [2, 6, 10, 14, 18, 21, 25, 29, 33, 36, 40, 44, 47, 51, 54]);\r\n  numberToBetsRange(userNumbers[5], bets, 57, 61);\r\n  numberToBets(userNumbers[6], bets, [2, 7, 11, 15, 19, 22, 26, 30, 34, 36, 41, 45, 48, 52, 54, 57, 58]);\r\n  numberToBetsRange(userNumbers[6], bets, 62, 64);\r\n  numberToBets(userNumbers[7], bets, [2, 8, 12, 16, 20, 23, 27, 31, 35, 37, 40, 45, 48, 51, 55, 59, 60, 62, 63, 65]);\r\n  numberToBets(userNumbers[8], bets, [3, 9, 12, 15, 18, 22, 25, 32, 35, 38, 40, 46, 49, 52, 56, 57, 61, 62, 65, 66]);\r\n  numberToBets(userNumbers[9], bets, [3, 8, 13, 14, 19, 24, 27, 30, 33, 36, 42, 46, 49, 53, 55, 59, 61, 62, 64, 67]);\r\n  numberToBets(userNumbers[10], bets, [3, 7, 10, 17, 20, 23, 28, 29, 34, 38, 42, 44, 48, 53, 56, 57, 59, 64, 65, 68]);\r\n  numberToBets(userNumbers[11], bets, [4, 8, 11, 17, 18, 22, 28, 31, 33, 39, 43, 44, 49, 51, 54]);\r\n  numberToBetsRange(userNumbers[11], bets, 63, 67);\r\n  numberToBets(userNumbers[12], bets, [4, 9, 10, 16, 19, 21, 27, 32, 34, 39, 42, 45, 50, 52, 54, 60, 61, 65, 67, 68]);\r\n  numberToBets(userNumbers[13], bets, [4, 6, 13, 15, 20, 24, 26, 29, 35, 38, 43, 45, 50, 51, 55, 58, 61, 64, 66, 68]);\r\n  numberToBets(userNumbers[14], bets, [5, 7, 13, 16, 18, 21, 28, 30, 35, 37, 43, 46, 47, 52, 56, 58, 59, 63, 67, 68]);\r\n  numberToBets(userNumbers[15], bets, [5, 9, 11, 14, 20, 24, 25, 31, 34, 37, 41, 44, 50, 53, 56, 58, 60, 62, 66, 67]);\r\n  numberToBets(userNumbers[16], bets, [5, 6, 12, 17, 19, 23, 26, 32, 33, 39, 41, 46, 47, 53, 55, 57, 60, 63, 66, 68]);\r\n\r\n  return bets;\r\n};\r\n\r\n// === HELPER FUNCTIONS ===\r\n// *inputs counting from 1 (easier to use when reading system schema)\r\n\r\n// push number (number) to all bets of given number (list) inside bets array (list of lists)\r\nconst numberToBets = (number, array, bets) => {\r\n  for (let i=0; i<bets.length; i++) {\r\n    array[bets[i]-1].push(number);\r\n  };\r\n};\r\n\r\n// push number (number) to all bets of given number range (first and last number, both included) inside bets array (list of lists)\r\nconst numberToBetsRange = (number, array, firstBet, lastBet) => {\r\n  for (let i=firstBet-1; i<lastBet; i++) { \r\n    array[i].push(number);\r\n  };\r\n};\r\n\r\n// === DISPLAY FUNCTION ===\r\nconst displayBets = bets => {\r\n  console.log(systemDescription);\r\n  console.log(`Twoje liczby [${numbersAmount}]: ${myNumbers}\r\n  `);\r\n  console.log(`Wygenerowano ${betsAmount} zakładów Multi Lotka na podstawie ${myNumbers.length} liczb.`);\r\n  console.log(`Koszt zakładów: [${betsAmount*betPrice} zł] \\n`)\r\n  bets.forEach((bet, i, bets) => {\r\n    console.log(`Zakład ${i+1}: \\t ${bet}\\t\\t [${bet.length} liczb]`);\r\n  });\r\n};\r\n\r\n// === RUN APP ===\r\nconst myNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17];\r\n\r\n// const myBets = generateBets(myNumbers);\r\n// displayBets(myBets);","import React from 'react';\r\nimport { betPrice } from '../systems/multi/SystemMulti_5-17-68';\r\n\r\nconst MultiDefinition = () => {\r\n  return (\r\n    <>\r\n      <h2>Multi Lotek</h2>\r\n      <p>Multi Lotek pozwala na skreślenie <strong>od 1 do 10 liczb</strong>.</p>\r\n      <p> Losowanych jest <strong>20 liczb</strong>, a losowanie odbywa się dwa razy dziennie - o <strong>14:00</strong> oraz o <strong>21:40</strong>.</p>\r\n      <p>Cena pojedynczego zakładu wynosi <strong>{betPrice.toFixed(2)}zł</strong>.</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MultiDefinition;","import React from 'react';\r\nimport { numbersPerBet, numbersAmount, betPrice, betsAmount } from '../systems/multi/SystemMulti_5-17-68';\r\n\r\nconst SystemDescription = () => {\r\n  return (\r\n    <>\r\n      <h2>System [{numbersPerBet}-{numbersAmount}-{betsAmount}]</h2>\r\n      <p>System liczbowy do gry Multi Lotto [S-N-Z], gdzie:</p>\r\n      <ul>\r\n        <li><strong>S</strong> - ilość skreśleń w zakładzie</li>\r\n        <li><strong>N</strong> - ilość typowanych liczb</li>\r\n        <li><strong>Z</strong> - ilość zakładów</li>\r\n      </ul>\r\n      <p><i>Koszt postawienia wszystkich zakładów w systemie to {(betPrice*betsAmount).toFixed(2)}zł.</i></p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SystemDescription;","import React from 'react';\r\nimport { MDBCol, MDBRow } from 'mdbreact';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst NumbersInput = props => {\r\n  return (\r\n      <MDBRow className=\"my-4\">\r\n        <MDBCol>\r\n          <div>\r\n            <h2>Moje liczby</h2>\r\n            <Formik\r\n              initialValues={{\r\n                myNumbers: ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', ''],\r\n              }}\r\n              onSubmit={values => {\r\n                props.setMyNumbers(values.myNumbers);\r\n                props.setMyBets(values.myNumbers)\r\n              }}\r\n            >\r\n              <Form>\r\n                <Field name=\"myNumbers[0]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[1]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[2]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[3]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[4]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[5]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[6]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[7]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[8]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[9]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[10]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[11]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[12]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[13]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[14]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[15]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <Field name=\"myNumbers[16]\" className='m-1' style={{width: \"30px\"}}/>\r\n                <button type=\"submit\" className=\"m-1\">Wygeneruj zakłady</button>\r\n              </Form>\r\n            </Formik>\r\n          </div>\r\n        </MDBCol>\r\n      </MDBRow>\r\n  );\r\n}\r\n\r\nexport default NumbersInput;","import React from 'react';\r\n\r\nconst Bet = props => {\r\n  return (\r\n    <tr>\r\n      <th>Zakład {props.betIndex}</th>\r\n      <td>{props.betNumbers[0]}</td>\r\n      <td>{props.betNumbers[1]}</td>\r\n      <td>{props.betNumbers[2]}</td>\r\n      <td>{props.betNumbers[3]}</td>\r\n      <td>{props.betNumbers[4]}</td>\r\n    </tr>\r\n    \r\n  );\r\n};\r\n\r\nexport default Bet;","import React from 'react';\r\nimport { MDBRow, MDBCol, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nimport Bet from './Bet';\r\nimport { numbersAmount } from '../systems/multi/SystemMulti_5-17-68';\r\n\r\nconst validateNumbers = (numbers) => {\r\n  let errorMessage = '';\r\n  for (let i=0; i<numbers.length; i++) {\r\n    if (parseInt(numbers[i], 10) !== Number(numbers[i])) {errorMessage = 'Podaj prawidłową liczbę (dopuszczalne są tylko cyfry).'};\r\n    if (numbers[i] < 1 || numbers[i] > 80) {errorMessage = 'Podaj liczby większe od 1 oraz mniejsze od 80.'};\r\n    if (new Set(numbers).size !== numbers.length) {errorMessage = 'Nie możesz wybrać dwóch takich samych liczb.'};\r\n    if (numbers[i] === '') {errorMessage = 'Wypełnij wszystkie pola (co najmniej jedno pole pozostało puste).'};\r\n  }\r\n  return errorMessage;\r\n};\r\n\r\nconst Bets = props => {\r\n  return (\r\n    <>\r\n      {props.myNumbers === '' ? <p>Podaj <strong>{numbersAmount}</strong> <em><b>różnych</b></em> liczb z zakresu <strong>1-80</strong>.</p> : \r\n        validateNumbers(props.myNumbers) !== '' ? <p className='text-danger'><b>Podano niewłaściwe liczby!</b></p> : <MDBRow className=\"mb-2\">\r\n        <MDBCol md=\"2\"></MDBCol>\r\n        <MDBCol md=\"2\">Twoje liczby:</MDBCol>\r\n        <MDBCol md=\"4\">{ props.myNumbers.join(', ') }</MDBCol>\r\n        <MDBCol md=\"2\">68 zakładów (x5 liczb)</MDBCol>\r\n        <MDBCol md=\"2\"></MDBCol>\r\n      </MDBRow>}\r\n      \r\n      <MDBRow className=\"my-4\">\r\n        <MDBCol md=\"2\"></MDBCol>\r\n        <MDBCol md=\"8\">\r\n          <MDBTable className=\"text-center table-fixed\">\r\n            <MDBTableHead>\r\n              <tr>\r\n                <th>Zakłady</th>\r\n                <th colSpan=\"5\">Liczby do skreślenia</th>\r\n              </tr>\r\n            </MDBTableHead>\r\n            <MDBTableBody>\r\n              {props.myBets === '' ? <tr className='text-danger'><td colSpan=\"6\">Wpisz swoje liczby i wygeneruj zakłady.</td></tr> : \r\n              validateNumbers(props.myNumbers) !== '' ? <tr className='text-danger'><td colSpan=\"6\">{validateNumbers(props.myNumbers)}</td></tr> : <>{props.myBets.map( (bet, i) => <Bet key={i} betIndex={i+1} betNumbers={bet} /> ) }</>}\r\n            </MDBTableBody>\r\n          </MDBTable>\r\n        </MDBCol>\r\n        <MDBCol md=\"2\"></MDBCol>\r\n      </MDBRow>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Bets;\r\n\r\n\r\n/**\r\n const validateNumbers = (numbers) => {\r\n  let errorMessage = '';\r\n  for (let i=0; i<numbers.length; i++) {\r\n    if (numbers[i] < 1 || numbers[i] > 80) {errorMessage = 'Podaj liczby większe od 1 oraz mniejsze od 80.'}\r\n  }\r\n  return errorMessage;\r\n};\r\n */","import React from 'react';\r\nimport { generateBets } from '../systems/multi/SystemMulti_5-17-68';\r\nimport { MDBRow, MDBCol } from 'mdbreact';\r\n\r\nimport MultiDescription from '../components/MultiDescription';\r\nimport SystemDescription from '../components/SystemDescription';\r\nimport NumbersInput from '../components/NumbersInput';\r\nimport Bets from '../components/Bets';\r\n\r\nclass System extends React.Component {\r\n  state = {\r\n      myNumbers: '',\r\n      myBets: '',\r\n  };\r\n\r\n  setMyNumbers = numbers => {\r\n    this.setState({ myNumbers: numbers.sort(function(a, b){return a-b}) });\r\n  };\r\n\r\n  setMyBets = numbers => {\r\n    this.setState({ myBets: generateBets(numbers) });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MDBRow>\r\n          <MDBCol md=\"6\"><MultiDescription /></MDBCol>\r\n          <MDBCol md=\"6\"><SystemDescription /></MDBCol>\r\n        </MDBRow>\r\n        <NumbersInput setMyNumbers={this.setMyNumbers} setMyBets={this.setMyBets} />\r\n        <Bets myNumbers={this.state.myNumbers} myBets={this.state.myBets}/>\r\n      </>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nexport default System;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return(\r\n    <>\r\n      <h3>O aplikacji</h3>\r\n      <p>Wersja <i>[web_1.1.0]</i></p>\r\n      <p>Aplikacja webowa do generowania zakładów Lotto według wybranego systemu oraz na podstawie podanych przez użytkownika liczb. Aplikacja powstaje z wykorzystaniem <em>React</em> oraz znajduje się w bardzo wczesnej fazie rozwoju. W najbliższym czasie planowane są następujące zmiany:</p>\r\n      <ul>\r\n        <li>opcja chybił trafił (losowe generowanie swoich liczb)</li>\r\n        <li>strona wizualna aplikacji oraz jej responsywność</li>\r\n        <li>zapis i wczytywanie zestawu liczb <em>(z wykorzystaniem LocalStorage)</em></li>\r\n        <li>pobranie wyników ostatniego losowania i automatyczne wskazanie zwycięskich kuponów oraz wygranej kwoty</li>\r\n      </ul>\r\n      <p>W dalszej perspektywie aplikacja rozbudowywana będzie jeszcze bardziej. W planach jest:</p>\r\n      <ul>\r\n        <li>przebudowa struktury aplikacji pod kątem wprowadzania nowych systemów liczbowych</li>\r\n        <li>implementacja innych gier Lotto oraz kolejnych systemów liczbowych</li>\r\n        <li>utworzenie konta, śledzenie historii swoich zakładów, bilans zysków i strat</li>\r\n        <li>statystyka na podstawie swoich gier oraz wyników ostatnich losowań</li>\r\n      </ul>\r\n      <p>W przyszłości planowane są także wersje aplikacji: mobilna <em>(z wykorzystaniem React Native)</em> oraz desktopowa (na PC) <em>(z wykorzystaniem Electron)</em>.</p>\r\n      <p><b>Lista zmian:</b></p>\r\n      <ul>\r\n        <p><i>wersja 1.1.0</i></p>\r\n        <li>dodano walidację formularza</li>\r\n        <li>sortowanie liczb w kolejności rosnącej przed wyświetleniem</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { MDBContainer } from 'mdbreact';\n\nimport ScrollToTop from './components/ScrollToTop';\nimport System from './pages/SystemMulti_5-17-68';\nimport About from './pages/About';\n\nfunction App() {\n  return (\n    <Router>\n      <ScrollToTop />\n      <MDBContainer>\n\n        <div className=\"App\">\n\n          <header>\n            <h1 className=\"text-center\">Lotto</h1>\n          </header>\n\n          <main>\n            <System />\n            <About />\n          </main>\n  \n        </div>\n\n      </MDBContainer>\n    </Router>\n    \n  );\n}\n\nexport default App;\n\n// github pages deployment guide: https://blog.usejournal.com/how-to-deploy-your-react-app-into-github-pages-b2c96292b18e\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}